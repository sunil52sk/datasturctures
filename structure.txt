Structure:
-------------
- collection of different data types under a single name. 
- Each variable in the structure is member of the structure.

Declare a structure:
--------------------------

struct structurename
{
//members
};

Eg:
struct Person
{
    char name[50]; 
    int age;
    float salary;
};


struct student
{
char name[10];//10
int class;//2
char section;//1
int rollnum;//2
};

struct student s;

Structure variable:
------------------------
struct structurename variable;

Eg: struct Person p;

Access members of a structure:
-------------------------------------
structurevariable.member

p.name="Geethu";
p.age=23;
p.salary=75000.00;

Program:
------------
#include <iostream>
using namespace std;
struct Person
{
    char name[50];
    int age;
    float salary;
};
int main()
{
    struct Person p1;
    cin.getline(p1.name, 50);
    cin >> p1.age;
    cin >> p1.salary;
    cout << "Name: " << p1.name << endl;
    cout <<"Age: " << p1.age << endl;
    cout << "Salary: " << p1.salary;

    return 0;
}

Using pointer:
-----------------

#include <iostream>
using namespace std;

struct Person
{
    char name[50];
    int age;
    float salary;
};

int main()
{
     struct Person p;
     Person *p1=&p;
    cin.getline(p1->name, 50);
    cin >> p1->age;
    cin >> p1->salary;
    cout << "Name: " << p1->name << endl;
    cout <<"Age: " << p1->age << endl;
    cout << "Salary: " << p1->salary;
    return 0;
}

Union:
---------
union Person
{
    char name[50];//50
    int age;//2
    float salary;//4
};


Structure:
-------------

#include<iostream>
using namespace std;
struct student
{
int rn,s1,s2,s3,s4,s5,avg,g;
};
int main()
{
  int s,i;
 // cout<<"STUDENT MARKSHEET USING STRUCTURES"<<endl;
 // cout<<"Enter the no of students";
  cin>>s;
  struct student e[s];
  //cout<<endl;
  for(i=0; i<s; i++)
  {
  cin>>e[i].rn;
  cin>>e[i].s1;
  cin>>e[i].s2;
  cin>>e[i].s3;
  cin>>e[i].s4;
  cin>>e[i].s5;
    e[i].avg = (e[i].s1+e[i].s2+e[i].s3+e[i].s4+e[i].s5)/5;
    if(e[i].avg>70)
      e[i].g = 1;
    else if(e[i].avg>=50 && e[i].avg<=70)
      e[i].g = 2;
    else
      e[i].g = 3;
  }
  return 0;
}
